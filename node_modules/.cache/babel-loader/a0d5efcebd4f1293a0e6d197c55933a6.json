{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from \"react\";\nimport { overlay as overlayStyle, sweetAlertContainer as containerStyle } from \"../styles/SweetAlertStyles\";\n\nvar Overlay =\n/** @class */\nfunction (_super) {\n  __extends(Overlay, _super);\n\n  function Overlay() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.overlayElement = null;\n\n    _this.setOverlayElementRef = function (element) {\n      _this.overlayElement = element;\n    };\n\n    return _this;\n  }\n\n  Overlay.prototype.componentDidMount = function () {\n    if (this.overlayElement) {\n      this.overlayElement.scrollTop = 0;\n    }\n  };\n\n  Overlay.prototype.render = function () {\n    var _a = this.props,\n        show = _a.show,\n        onClick = _a.onClick,\n        onKeyDown = _a.onKeyDown,\n        children = _a.children;\n    return show ? React.createElement(\"div\", {\n      ref: this.setOverlayElementRef,\n      style: __assign({}, overlayStyle, containerStyle),\n      onClick: function (e) {\n        return onClick(e);\n      },\n      tabIndex: 0,\n      onKeyDown: function (e) {\n        return onKeyDown(e);\n      }\n    }, children) : React.createElement(\"div\", {\n      style: containerStyle,\n      tabIndex: 0,\n      onKeyDown: function (e) {\n        return onKeyDown(e);\n      }\n    }, children);\n  };\n\n  return Overlay;\n}(React.Component);\n\nexport default Overlay;","map":null,"metadata":{},"sourceType":"module"}