{"ast":null,"code":"import _slicedToArray from \"C:\\\\Windows\\\\System32\\\\apitest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Windows\\\\System32\\\\apitest\\\\src\\\\Result.js\";\nimport React, { useState, useContext } from 'react';\nimport SearchResult from './SearchResult';\nimport SampleData from './SampleData';\nimport { Context } from './Context';\nimport AltSearchResult from './AltSearchResult';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst Result = () => {\n  const _useContext = useContext(Context),\n        product = _useContext.product;\n\n  const newarr = []; // for(let i = 0; i<2; i++){\n  //  newarr.push(product.searchResult[0].item[i].galleryURL)\n  //     }\n  // let Elements\n  // if(product.searchResult.length >0){\n\n  const LEFT_PAGE = 'LEFT';\n  const RIGHT_PAGE = 'RIGHT';\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        totalRecords = _useState2[0],\n        setTotalRecords = _useState2[1];\n\n  const _useState3 = useState(30),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pageLimit = _useState4[0],\n        setPageLimit = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pageNeighbours = _useState6[0],\n        setPageNeighbours = _useState6[1];\n\n  const _useState7 = useState(Math.ceil(this.totalRecords / this.pageLimit)),\n        _useState8 = _slicedToArray(_useState7, 2),\n        totalPages = _useState8[0],\n        setTotalPages = _useState8[1];\n\n  const _useState9 = useState(1),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentPage = _useState10[0],\n        setCurrentPage = _useState10[1];\n\n  setPageNeighbours(Math.max(0, Math.min(pageNeighbours, 2)));\n\n  const fetchPageNumbers = () => {\n    const totalPages = totalPages;\n    const currentPage = currentPage;\n    const pageNeighbours = pageNeighbours;\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\n\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\n\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = totalPages - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case hasLeftSpill && !hasRightSpill:\n          {\n            const extraPages = range(startPage - spillOffset, startPage - 1);\n            pages = [LEFT_PAGE, ...extraPages, ...pages];\n            break;\n          }\n        // handle: (1) {2 3} [4] {5 6} > (10)\n\n        case !hasLeftSpill && hasRightSpill:\n          {\n            const extraPages = range(endPage + 1, endPage + spillOffset);\n            pages = [...pages, ...extraPages, RIGHT_PAGE];\n            break;\n          }\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n\n        case hasLeftSpill && hasRightSpill:\n        default:\n          {\n            pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n            break;\n          }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  const gotoPage = page => {\n    const _this$props$onPageCha = this.props.onPageChanged,\n          onPageChanged = _this$props$onPageCha === void 0 ? f => f : _this$props$onPageCha;\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n    this.setState({\n      currentPage\n    }, () => onPageChanged(paginationData));\n  };\n\n  const Elements = product.map(item => item.paginationOutput[0].totalEntries[0] != \"0\" ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, item.searchResult[0].item.map(t => React.createElement(SearchResult, {\n    item: t.galleryURL,\n    title: t.title,\n    itemId: t.itemId,\n    subtitle: t.subtitle,\n    conditionDisplayName: t.conditionDisplayName,\n    shipping: t.shippingInfo[0].shippingType[0],\n    shippingcost: t.shippingInfo[0].shippingType[0],\n    price: t.sellingStatus[0].currentPrice[0].__value__,\n    endtime: t.sellingStatus[0].timeLeft,\n    buyitnow: t.listingInfo[0].buyItNowPrice != undefined ? t.listingInfo[0].buyItNowPrice[0].__value__ : null,\n    listingtype: t.listingInfo[0].listingType[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"No matches found for that search\"));\n  const Page = product.map(item => item.paginationOutput[0].totalEntries[0] != \"0\" ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, item.paginationOutput[0].totalEntries[0]) : null);\n  const pages = this.fetchPageNumbers(); // else {Elements = <h1>no Search</h1>}\n  // console.log(product !== null || undefined ? product[0].ack[0] : null,\"ayy\")\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, Elements, pages.map((page, index) => {\n    if (page === LEFT_PAGE) return React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      \"aria-label\": \"Previous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\xAB\"), React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Previous\")));\n    if (page === RIGHT_PAGE) return React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      \"aria-label\": \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\xBB\"), React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Next\")));\n    return React.createElement(\"li\", {\n      key: index,\n      className: \"page-item\".concat(currentPage === page ? ' active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, page));\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["C:/Windows/System32/apitest/src/Result.js"],"names":["React","useState","useContext","SearchResult","SampleData","Context","AltSearchResult","range","from","to","step","i","push","Result","product","newarr","LEFT_PAGE","RIGHT_PAGE","totalRecords","setTotalRecords","pageLimit","setPageLimit","pageNeighbours","setPageNeighbours","Math","ceil","totalPages","setTotalPages","currentPage","setCurrentPage","max","min","fetchPageNumbers","totalNumbers","totalBlocks","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","gotoPage","page","props","onPageChanged","f","paginationData","setState","Elements","map","item","paginationOutput","totalEntries","searchResult","t","galleryURL","title","itemId","subtitle","conditionDisplayName","shippingInfo","shippingType","sellingStatus","currentPrice","__value__","timeLeft","listingInfo","buyItNowPrice","undefined","listingType","Page","index"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport SearchResult from './SearchResult'\r\nimport SampleData from './SampleData'\r\nimport {Context} from './Context'\r\nimport AltSearchResult from './AltSearchResult'\r\n\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n  \r\n    while (i <= to) {\r\n      range.push(i);\r\n      i += step;\r\n    }\r\n  \r\n    return range;\r\n  }\r\n  \r\nconst Result = () => {\r\n    const {product} = useContext(Context)\r\n    const newarr = []\r\n    // for(let i = 0; i<2; i++){\r\n    //  newarr.push(product.searchResult[0].item[i].galleryURL)\r\n    //     }\r\n    // let Elements\r\n    // if(product.searchResult.length >0){\r\n        const LEFT_PAGE = 'LEFT';\r\n        const RIGHT_PAGE = 'RIGHT';\r\n        const [totalRecords, setTotalRecords] = useState(0)\r\n        const [pageLimit, setPageLimit] = useState(30)\r\n        const [pageNeighbours, setPageNeighbours] = useState(0)\r\n        const [totalPages, setTotalPages] = useState(Math.ceil(this.totalRecords / this.pageLimit))\r\n        const [currentPage, setCurrentPage] = useState(1)\r\n\r\n        setPageNeighbours(Math.max(0, Math.min(pageNeighbours, 2)))\r\n       const fetchPageNumbers = () => {\r\n\r\n            const totalPages = totalPages;\r\n            const currentPage = currentPage;\r\n            const pageNeighbours = pageNeighbours;\r\n        \r\n            /**\r\n             * totalNumbers: the total page numbers to show on the control\r\n             * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n             */\r\n            const totalNumbers = (pageNeighbours * 2) + 3;\r\n            const totalBlocks = totalNumbers + 2;\r\n        \r\n            if (totalPages > totalBlocks) {\r\n        \r\n              const startPage = Math.max(2, currentPage - pageNeighbours);\r\n              const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n        \r\n              let pages = range(startPage, endPage);\r\n        \r\n              /**\r\n               * hasLeftSpill: has hidden pages to the left\r\n               * hasRightSpill: has hidden pages to the right\r\n               * spillOffset: number of hidden pages either to the left or to the right\r\n               */\r\n              const hasLeftSpill = startPage > 2;\r\n              const hasRightSpill = (totalPages - endPage) > 1;\r\n              const spillOffset = totalNumbers - (pages.length + 1);\r\n        \r\n              switch (true) {\r\n                // handle: (1) < {5 6} [7] {8 9} (10)\r\n                case (hasLeftSpill && !hasRightSpill): {\r\n                  const extraPages = range(startPage - spillOffset, startPage - 1);\r\n                  pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n                  break;\r\n                }\r\n        \r\n                // handle: (1) {2 3} [4] {5 6} > (10)\r\n                case (!hasLeftSpill && hasRightSpill): {\r\n                  const extraPages = range(endPage + 1, endPage + spillOffset);\r\n                  pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n                  break;\r\n                }\r\n        \r\n                // handle: (1) < {4 5} [6] {7 8} > (10)\r\n                case (hasLeftSpill && hasRightSpill):\r\n                default: {\r\n                  pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n                  break;\r\n                }\r\n              }\r\n        \r\n              return [1, ...pages, totalPages];\r\n        \r\n            }\r\n        \r\n            return range(1, totalPages);\r\n        \r\n          }\r\n         const gotoPage = page => {\r\n            const { onPageChanged = f => f } = this.props;\r\n        \r\n            const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n        \r\n            const paginationData = {\r\n              currentPage,\r\n              totalPages: this.totalPages,\r\n              pageLimit: this.pageLimit,\r\n              totalRecords: this.totalRecords\r\n            };\r\n        \r\n            this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n          }\r\n\r\n        const Elements = product.map((item) => (\r\n         (item.paginationOutput[0].totalEntries[0] != \"0\") ? \r\n(        <div>\r\n            {item.searchResult[0].item.map((t) => (\r\n                <SearchResult item={t.galleryURL} title={t.title} itemId={t.itemId} subtitle={t.subtitle} conditionDisplayName={t.conditionDisplayName} \r\n                shipping={t.shippingInfo[0].shippingType[0]} \r\n                shippingcost={t.shippingInfo[0].shippingType[0]}   \r\n                price={t.sellingStatus[0].currentPrice[0].__value__} \r\n                endtime={t.sellingStatus[0].timeLeft}\r\n                buyitnow= {t.listingInfo[0].buyItNowPrice!= undefined ? t.listingInfo[0].buyItNowPrice[0].__value__ : null }\r\n                listingtype={t.listingInfo[0].listingType[0]}/>\r\n                ))\r\n        }\r\n        </div>) : <h1>No matches found for that search</h1>\r\n    ))\r\n    \r\n        const Page = product.map((item) => (\r\n            item.paginationOutput[0].totalEntries[0] != \"0\" ?\r\n        <h1>{item.paginationOutput[0].totalEntries[0]}</h1>\r\n        : null\r\n        ))\r\n        const pages = this.fetchPageNumbers();\r\n\r\n    // else {Elements = <h1>no Search</h1>}\r\n    // console.log(product !== null || undefined ? product[0].ack[0] : null,\"ayy\")\r\n    return (\r\n        <div>\r\n            {Elements}\r\n            { pages.map((page, index) => {\r\n\r\nif (page === LEFT_PAGE) return (\r\n  <li key={index} className=\"page-item\">\r\n    <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" >\r\n      <span aria-hidden=\"true\">&laquo;</span>\r\n      <span className=\"sr-only\">Previous</span>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nif (page === RIGHT_PAGE) return (\r\n  <li key={index} className=\"page-item\">\r\n    <a className=\"page-link\" href=\"#\" aria-label=\"Next\" >\r\n      <span aria-hidden=\"true\">&raquo;</span>\r\n      <span className=\"sr-only\">Next</span>\r\n    </a>\r\n  </li>\r\n);\r\n\r\nreturn (\r\n  <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n    <a className=\"page-link\" href=\"#\" >{ page }</a>\r\n  </li>\r\n);\r\n\r\n}) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result"]},"metadata":{},"sourceType":"module"}