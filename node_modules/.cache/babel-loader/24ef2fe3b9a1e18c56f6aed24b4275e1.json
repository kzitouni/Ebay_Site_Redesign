{"ast":null,"code":"import _slicedToArray from \"C:\\\\Windows\\\\System32\\\\apitest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Windows\\\\System32\\\\apitest\\\\src\\\\ProductPage\\\\ImageSlider\\\\Slider.js\";\nimport React, { Component, useState, useContext } from \"react\";\nimport { Context } from \"../../Context\";\nimport ImageLine from \"./ImageLine\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nconst Slider = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentIndex = _useState2[0],\n        setCurrentIndex = _useState2[1];\n\n  const _useContext = useContext(Context),\n        itemspec = _useContext.itemspec;\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        translateValue = _useState4[0],\n        setTranslateValue = _useState4[1];\n\n  const styles = {\n    backgroundImage: \"url(\".concat(itemspec != \"\" ? itemspec.Item.PictureURL[currentIndex] : null, \")\")\n  };\n\n  const slideWidth = () => {\n    return document.querySelector(\".slide\").clientWidth;\n  };\n\n  const gotoPrevSlide = () => itemspec != \"\" ? currentIndex == 0 ? setCurrentIndex(itemspec.Item.PictureURL.length - 1) && setTranslateValue(0) : setCurrentIndex(currentIndex - 1) && setTranslateValue(translateValue + -slideWidth()) : null;\n\n  const gotoNextSlide = () => itemspec != \"\" ? currentIndex == itemspec.Item.PictureURL.length - 1 ? setCurrentIndex(0) && setTranslateValue(0) : setCurrentIndex(currentIndex + 1) && setTranslateValue(translateValue + -slideWidth()) : null;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, itemspec.Item.PictureURL.length < 2 ? React.createElement(\"div\", {\n    className: \"ProductPage_Image_Container\",\n    style: {\n      backgroundImage: \"url(\".concat(itemspec.Item.PictureURL[0], \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Carousel, {\n    showThumbs: false,\n    showArrows: true,\n    showStatus: false,\n    centerMode: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, itemspec != \"\" ? itemspec.Item.PictureURL.map(item => React.createElement(\"div\", {\n    className: \"ProductPage_Image_Container\",\n    style: {\n      backgroundImage: \"url(\".concat(item, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })) : null), React.createElement(\"div\", {\n    className: \"Slider_Grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, itemspec != \"\" ? itemspec.Item.PictureURL.map((image, i) => React.createElement(\"button\", {\n    className: \"Image_Button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ImageLine, {\n    image: image,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))) : null));\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Windows/System32/apitest/src/ProductPage/ImageSlider/Slider.js"],"names":["React","Component","useState","useContext","Context","ImageLine","Carousel","Slider","currentIndex","setCurrentIndex","itemspec","translateValue","setTranslateValue","styles","backgroundImage","Item","PictureURL","slideWidth","document","querySelector","clientWidth","gotoPrevSlide","length","gotoNextSlide","map","item","image","i"],"mappings":"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","sourcesContent":["import React, { Component, useState, useContext } from \"react\";\r\nimport { Context } from \"../../Context\";\r\nimport ImageLine from \"./ImageLine\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nconst Slider = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const { itemspec } = useContext(Context);\r\n  const [translateValue, setTranslateValue] = useState(0);\r\n  const styles = {\r\n    backgroundImage: `url(${\r\n      itemspec != \"\" ? itemspec.Item.PictureURL[currentIndex] : null\r\n    })`\r\n  };\r\n  const slideWidth = () => {\r\n    return document.querySelector(\".slide\").clientWidth;\r\n  };\r\n  const gotoPrevSlide = () =>\r\n    itemspec != \"\"\r\n      ? currentIndex == 0\r\n        ? setCurrentIndex(itemspec.Item.PictureURL.length - 1) &&\r\n          setTranslateValue(0)\r\n        : setCurrentIndex(currentIndex - 1) &&\r\n          setTranslateValue(translateValue + -slideWidth())\r\n      : null;\r\n\r\n  const gotoNextSlide = () =>\r\n    itemspec != \"\"\r\n      ? currentIndex == itemspec.Item.PictureURL.length - 1\r\n        ? setCurrentIndex(0) && setTranslateValue(0)\r\n        : setCurrentIndex(currentIndex + 1) &&\r\n          setTranslateValue(translateValue + -slideWidth())\r\n      : null;\r\n\r\n  return (\r\n    <div>\r\n      {itemspec.Item.PictureURL.length < 2 ? (\r\n        <div\r\n          className=\"ProductPage_Image_Container\"\r\n          style={{ backgroundImage: `url(${itemspec.Item.PictureURL[0]})` }}\r\n        ></div>\r\n      ) : (\r\n        <Carousel\r\n          showThumbs={false}\r\n          showArrows={true}\r\n          showStatus={false}\r\n          centerMode={true}\r\n        >\r\n          {itemspec != \"\"\r\n            ? itemspec.Item.PictureURL.map(item => (\r\n                <div\r\n                  className=\"ProductPage_Image_Container\"\r\n                  style={{ backgroundImage: `url(${item})` }}\r\n                ></div>\r\n              ))\r\n            : null}\r\n        </Carousel>\r\n      )}\r\n      <div className=\"Slider_Grid\">\r\n        {itemspec != \"\"\r\n          ? itemspec.Item.PictureURL.map((image, i) => (\r\n              <button className=\"Image_Button\">\r\n                <ImageLine image={image} key={i} />\r\n              </button>\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}